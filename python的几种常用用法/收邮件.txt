#!/usr/bin/python
# coding: UTF-8
#作者 蒋明
#作用 python 提交android发版工具
#pip install pywinauto
#P6 - Time Series Forecasting
#http://www.youtubecomtomp3.com/zh/YouTube-to-MP4.php
#日期 2016-12-16





from datetime import *  
from PIL import Image
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
#import win32gui
import os
from selenium.webdriver.support.ui import Select
import getpass, poplib
#import win32con
import time,platform,sys, getopt,paramiko,random,re
#import socks  
#import socket 
#import requests
import io
import sys
import urllib.request




import hashlib
import http.client
import urllib.request
import urllib
import json
import base64



from email.parser import Parser

from email.header import decode_header

from email.utils import parseaddr



import poplib







def guess_charset(msg):

    charset = msg.get_charset()

    if charset is None:

        content_type = msg.get('Content-Type', '').lower()

        pos = content_type.find('charset=')

        if pos >= 0:

            charset = content_type[pos + 8:].strip()

    return charset



def decode_str(s):

    value, charset = decode_header(s)[0]

    if charset:

        value = value.decode(charset)

    return value



def print_info(msg, indent=0):
    yanzhengma=""
    if indent == 0:

        for header in ['From', 'To', 'Subject']:

            value = msg.get(header, '')

            if value:

                if header=='Subject':

                    value = decode_str(value)

                else:

                    hdr, addr = parseaddr(value)

                    name = decode_str(hdr)

                    value = u'%s <%s>' % (name, addr)

            print('%s%s: %s' % ('  ' * indent, header, value))

    if (msg.is_multipart()):

        parts = msg.get_payload()

        for n, part in enumerate(parts):

            print('%spart %s' % ('  ' * indent, n))

            print('%s--------------------' % ('  ' * indent))

            yanzhengma=print_info(part, indent + 1)

    else:

        content_type = msg.get_content_type()

        if content_type=='text/plain' or content_type=='text/html':

            content = msg.get_payload(decode=True)

            charset = "utf-8"

            if charset:

                content = content.decode(charset)

            print('%sText: %s' % ('  ' * indent, content + '...'))
            matchObj = re.search( r'<a href="(.+?cation.{41})',content, re.M|re.I)
            if matchObj:
                print (matchObj.group(1))
                yanzhengma=matchObj.group(1)

        else:

            print('%sAttachment: %s' % ('  ' * indent, content_type))
    
    return yanzhengma

sys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding='gb18030') #改变标准输出的默认编码
res=urllib.request.urlopen('http://www.baidu.com')
htmlBytes=res.read()









#back=socket.socket
#socks.set_default_proxy(socks.SOCKS5, "127.0.0.1",1080)
#print(requests.get('http://ifconfig.me/ip').text)



url=""
argv=sys.argv[1:]
try:
  opts, args = getopt.getopt(argv,"i:")
except getopt.GetoptError:
  print ('test.py -i <inputfile> -o <outputfile>')
  sys.exit(2)
for opt, arg in opts:
  if opt in ("-i","--invite"):
    url = arg
    print (url)

def mail():
  email = 'a@iigogo.com'
  password = 'jmdjsj903291A'
  pop3_server ='pop.exmail.qq.com'
  server = poplib.POP3(pop3_server)
  server.set_debuglevel(1)
  print(server.getwelcome().decode('utf-8'))
  server.user(email)
  server.pass_(password)
  print('Messages: %s. Size: %s' % server.stat())
  resp, mails, octets = server.list()
  print(mails)
  index = len(mails)
  resp, lines, octets = server.retr(index)
  msg_content = b'\r\n'.join(lines).decode('utf-8')
  msg = Parser().parsestr(msg_content)
  a=print_info(msg)
  server.dele(index)
  server.quit()
  return a

def login(name):
  d.get("https://github.com/join?return_to=%2Fjoin%3Fsource%3Dheader-home&source=login")
  d.find_element_by_xpath('//*[@id="user_login"]').send_keys("qq2100803"+name)
  d.find_element_by_xpath('//*[@id="user_email"]').send_keys("qq2100803"+name+"@iigogo.com")
  d.find_element_by_xpath('//*[@id="user_password"]').send_keys("jmdjsj903291A")
  d.find_element_by_xpath('//*[@id="signup_button"]').click()
  time.sleep(1) 
  d.get("https://github.com/logout")
  d.find_element_by_xpath('//*[@id="js-pjax-container"]/div/form/input').click()
  
  time.sleep(1) 
  vurl=mail()
  print(vurl)
  try:
    d.get(vurl)
    d.find_element_by_xpath('//*[@id="login_field"]').send_keys("qq2100803"+name+"@iigogo.com")
    d.find_element_by_xpath('//*[@id="password"]').send_keys("jmdjsj903291A")
    d.find_element_by_xpath('//*[@id="login"]/form/div[4]/input[3]').click()
  except:
    a=1
  time.sleep(1) 
  d.get("https://github.com/jiangming1/cmdb")
  time.sleep(1) 
  try:
#    d.find_element_by_xpath('//*[@id="js-repo-pjax-container"]/div[1]/div[1]/ul/li[2]/div/form[2]/button').click()
#    time.sleep(1) 
#    d.find_element_by_xpath('//*[@id="js-repo-pjax-container"]/div[1]/div[1]/ul/li[1]/form/div[2]/a[1]/span').click()
#    time.sleep(1) 
    d.find_element_by_xpath('//*[@id="js-repo-pjax-container"]/div[1]/div[1]/ul/li[1]/form/div[2]/div/div/div[2]/div[2]/div/span[1]').click()
    time.sleep(1) 
    d.find_element_by_xpath('//*[@id="js-repo-pjax-container"]/div[1]/div[1]/ul/li[3]/form/button').click()

    time.sleep(1) 

  except:
    a=1
  d.get("https://github.com/logout")
  d.find_element_by_xpath('//*[@id="js-pjax-container"]/div/form/input').click()
  time.sleep(1) 
  
  
def update1(channel):


  matchObj = re.search( r'_(\d{5})_',url, re.M|re.I)
  print (matchObj.group(1))
  versioncode=matchObj.group(1)

  matchObj = re.search( r'_(\w+?_\w+?)_',url, re.M|re.I)
  print (matchObj.group(1))
  #channel=matchObj.group(1)



  matchObj = re.search( r'_(\d\.\d\.\d)',url, re.M|re.I)
  print (matchObj.group(1))

  versionName=matchObj.group(1)

  matchObj = re.search( r'_(\d{8})',url, re.M|re.I)
  print (matchObj.group(1))
  publishDate=matchObj.group(1)
  strinfo = re.compile(r'_(\w+?_\w+?)_')
  url2 = strinfo.sub("_"+channel+"_",url)
  print (url2)
  url1="https://test.laicunba.com/console/setting/android_publish.jsp"
  d.get(url1)
  d.find_element_by_css_selector("#channel").send_keys(channel)
  d.find_element_by_css_selector("#publishDate").send_keys(publishDate)
  d.find_element_by_css_selector("#apkUrl").send_keys(url2)
  d.find_element_by_css_selector("#versionCode").send_keys(versioncode)
  d.find_element_by_css_selector("#versionName").send_keys(versionName)
  d.find_element_by_css_selector("#summary").send_keys("测试上传")
  d.find_element_by_css_selector("#btnSubmit1").click()

  
  
def update(channel):


  matchObj = re.search( r'_(\d{5})_',url, re.M|re.I)
  print (matchObj.group(1))
  versioncode=matchObj.group(1)

  matchObj = re.search( r'_(\w+?_\w+?)_',url, re.M|re.I)
  print (matchObj.group(1))
  #channel=matchObj.group(1)



  matchObj = re.search( r'_(\d\.\d\.\d)',url, re.M|re.I)
  print (matchObj.group(1))

  versionName=matchObj.group(1)

  matchObj = re.search( r'_(\d{8})',url, re.M|re.I)
  print (matchObj.group(1))
  publishDate=matchObj.group(1)
  strinfo = re.compile(r'_(\w+?_\w+?)_')
  url2 = strinfo.sub("_"+channel+"_",url)
  print (url2)
  url1="https://8.laicunba.com/console/setting/android_publish.jsp"
  d.get(url1)
  d.find_element_by_css_selector("#channel").send_keys(channel)
  d.find_element_by_css_selector("#publishDate").send_keys(publishDate)
  d.find_element_by_css_selector("#apkUrl").send_keys(url2)
  d.find_element_by_css_selector("#versionCode").send_keys(versioncode)
  d.find_element_by_css_selector("#versionName").send_keys(versionName)
  d.find_element_by_css_selector("#summary").send_keys("存管版本，修复提现页面显示bug！")
  d.find_element_by_css_selector("#btnSubmit1").click()
  time.sleep(5)
  alert = d.switch_to.alert
  alert.accept()
def findstr(str,biaodashi):
  matchObj = re.search( biaodashi,str, re.M|re.I)
  return (matchObj.group(1))
  
def savedata(yingyongming,paiming):
  d.get("http://127.0.0.1:3000/sousuos/new")
  d.find_element_by_css_selector("#sousuo_appname").send_keys(yingyongming)
  d.find_element_by_css_selector("#sousuo_qushi").send_keys(paiming)
  d.find_element_by_css_selector('#new_sousuo > div.actions > input[type="submit"]').click()
def search(guanjianci):
  d.get("https://aso100.com/search?country=cn&search="+guanjianci)
  lines=d.find_element_by_css_selector("body").text
  for num in range(1,20):
    savedata(findstr(lines,r''+str(num)+'、'+'(.*)'),num)


  
  #rint (datetime.now().strftime("%Y-%m-%d %H:%M:%S")  ) 


#login("root","root")
#update("360sz_20202")

chrome_options = webdriver.ChromeOptions()
chrome_options.add_argument('--headless')
chrome_options.add_argument('--disable-gpu')
d = webdriver.Chrome()
d.implicitly_wait(3)
#mail()
url='<a href="https://github.com/users/2100803/emails/33900129/confirm_verification/35e449e860408b2b30db9f7702e84139922c2bb9'
matchObj = re.search( r'<a href="(.+?cation.{41})',url, re.M|re.I)
print (matchObj.group(1))
for num in range(1,200):
  login(str(num))

